{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/yubikit\/ec\/privatekey\/uncompressedrepresentation"]}],"metadata":{"title":"uncompressedRepresentation","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"uncompressedRepresentation"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"}],"modules":[{"name":"YubiKit"}],"symbolKind":"property","role":"symbol","externalID":"s:7YubiKit2ECO10PrivateKeyV26uncompressedRepresentation10Foundation4DataVvp","roleHeading":"Instance Property"},"hierarchy":{"paths":[["doc:\/\/YubiKit\/documentation\/YubiKit","doc:\/\/YubiKit\/documentation\/YubiKit\/EC","doc:\/\/YubiKit\/documentation\/YubiKit\/EC\/PrivateKey"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"uncompressedRepresentation","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}]}]}],"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/YubiKit\/documentation\/YubiKit\/EC\/PrivateKey\/uncompressedRepresentation","interfaceLanguage":"swift"},"abstract":[{"text":"Uncompressed representation of private key as 0x04 || X || Y || K.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://YubiKit/documentation/YubiKit/EC":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"EC"}],"title":"EC","abstract":[{"text":"Elliptic Curve cryptographic key types and utilities.","type":"text"},{"text":" ","type":"text"},{"text":"Defines elliptic curve key types and utility methods for handling public and private keys for secp256r1 and secp384r1 curves.","type":"text"}],"identifier":"doc:\/\/YubiKit\/documentation\/YubiKit\/EC","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"EC"}],"url":"\/documentation\/yubikit\/ec","kind":"symbol"},"doc://YubiKit/documentation/YubiKit/EC/PrivateKey":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrivateKey","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"EC.PrivateKey","type":"topic","url":"\/documentation\/yubikit\/ec\/privatekey","identifier":"doc:\/\/YubiKit\/documentation\/YubiKit\/EC\/PrivateKey","abstract":[{"type":"text","text":"An elliptic curve private key with associated public key and secret scalar k."}],"navigatorTitle":[{"text":"PrivateKey","kind":"identifier"}]},"doc://YubiKit/documentation/YubiKit":{"kind":"symbol","identifier":"doc:\/\/YubiKit\/documentation\/YubiKit","title":"YubiKit","type":"topic","role":"collection","url":"\/documentation\/yubikit","abstract":[{"type":"text","text":"Connect and run commands on the different applications on a YubiKey. The framework support connecting using NFC, Lightning and USB-C."}],"images":[{"type":"icon","identifier":"documentation-header.png"}]},"documentation-header.png":{"type":"image","identifier":"documentation-header.png","variants":[{"url":"\/images\/YubiKit\/documentation-header@2x.png","traits":["2x","light"]},{"url":"\/images\/YubiKit\/documentation-header~dark@2x.png","traits":["2x","dark"]}],"alt":"YubiKeys in a row"},"doc://YubiKit/documentation/YubiKit/EC/PrivateKey/uncompressedRepresentation":{"title":"uncompressedRepresentation","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"uncompressedRepresentation","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"}],"identifier":"doc:\/\/YubiKit\/documentation\/YubiKit\/EC\/PrivateKey\/uncompressedRepresentation","url":"\/documentation\/yubikit\/ec\/privatekey\/uncompressedrepresentation","role":"symbol","abstract":[{"text":"Uncompressed representation of private key as 0x04 || X || Y || K.","type":"text"}],"kind":"symbol"}}}