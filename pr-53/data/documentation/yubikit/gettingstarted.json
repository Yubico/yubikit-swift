{"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The YubiKit framework is distributed using the Swift Package Manager. To add the framework to your project follow these steps:"}]},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"text":"Select your project.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Choose the “Package Dependencies” tab.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Press the plus-button to bring up the add package dialog.","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"add-framework-1.png"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Enter ","type":"text"},{"code":"https:\/\/github.com\/Yubico\/yubikit-swift\/","type":"codeVoice"},{"text":" in the search field and select the Yubico Swift Package.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Press the “Add Package” button to add the SDK to your project."}]}]}],"type":"orderedList","start":4},{"type":"paragraph","inlineContent":[{"identifier":"add-framework-2.png","type":"image"}]},{"level":3,"anchor":"NFC","text":"NFC","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"If you want your app to communicate with YubiKeys via NFC you need to add the wireless entitlement, list of NFC","type":"text"},{"text":" ","type":"text"},{"text":"application identifiers and a NFC Privacy statement to the application.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Add Wireless entitlement","type":"text"}]}]},{"items":[{"content":[{"inlineContent":[{"text":"Select your project.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Select your application target."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Choose the “Signing & Capabilities” tab."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Click the “+”-button to add a new capability."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Select the “Near Field Communication Tag” capability."}],"type":"paragraph"}]}],"type":"orderedList"},{"type":"paragraph","inlineContent":[{"identifier":"nfc-entitlement.png","type":"image"}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Add list of NFC application identifiers","type":"text"}],"type":"strong"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Choose the “Info” tab."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add the “ISO7816 application identifiers for NFC” key to the “Custom iOS Target Properties”."}]}]}],"type":"orderedList","start":6},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"nfc-identifiers.png"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Add the Yubico NFC application identifiers to enable communication with the different"},{"type":"text","text":" "},{"type":"text","text":"applications on the YubiKey."}],"type":"paragraph"}]}],"type":"orderedList","start":8},{"syntax":null,"type":"codeListing","code":["A000000527471117  \/\/ YubiKey Management Application","A0000006472F0001  \/\/ FIDO\/U2F","A0000005272101    \/\/ OATH","A000000308        \/\/ PIV","A000000527200101  \/\/ YubiKey application\/OTP (for HMAC SHA1 challenge-response)","A000000151000000  \/\/ Security Domain"]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"nfc-identifiers-list.png"}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Add a NFC Privacy description","type":"text"}]}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add the “Privacy - NFC Usage Scan Description” key and a string that describes what you will use NFC for in"},{"type":"text","text":" "},{"type":"text","text":"the application e.g “The application needs access to NFC reading to communicate with your YubiKey.”"}]}]}],"type":"orderedList","start":9},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"nfc-privacy.png"}]},{"level":3,"anchor":"SmartCardUSB-C","text":"SmartCard\/USB-C","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To support YubiKeys connected via the USB-C port on a device running iOS 16 or higher, you need to add the"},{"type":"text","text":" "},{"type":"codeVoice","code":"com.apple.security.smartcard"},{"type":"text","text":" entitlement to your application."}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Select the application entitlements file."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Add the "},{"code":"com.apple.security.smartcard","type":"codeVoice"},{"type":"text","text":" entitlement to the entitlement list."}],"type":"paragraph"}]}],"type":"orderedList"},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"smart-card.png"}]},{"name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The SmartCard\/USB-C connection only support the CCID based applications on the YubiKey and does not support U2F, FIDO2 or OTP."}]}],"type":"aside","style":"note"},{"level":3,"anchor":"LightningAccessoryConnection-ie-5Ci-YubiKey","text":"Lightning\/AccessoryConnection i.e 5Ci YubiKey","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To add support for the 5Ci YubiKey that connect to the iPhone via the Lightning port you need to add the "},{"code":"com.yubico.ylp","type":"codeVoice"},{"type":"text","text":" string to the list of External Accessories."}]},{"items":[{"content":[{"inlineContent":[{"text":"Select your project.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Select your application target.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Choose the “Info” tab."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"If not present add the "},{"type":"codeVoice","code":"Supported external accessory protocols"},{"type":"text","text":" key and insert the string "},{"type":"codeVoice","code":"com.yubico.ylp"},{"type":"text","text":" in its list."}],"type":"paragraph"}]}],"type":"orderedList"},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"external-accessory.png"}]},{"name":"Note","content":[{"inlineContent":[{"type":"text","text":"The YubiKey 5Ci is an Apple MFi certified external accessory and communicates over iAP2. Setting the value for "},{"type":"codeVoice","code":"Supported external accessory protocols"},{"type":"text","text":" to "},{"type":"codeVoice","code":"com.yubico.ylp"},{"type":"text","text":" will tell the app that all communication with the 5Ci YubiKey via the Lightning port is done using the External Accessory framework."}],"type":"paragraph"}],"type":"aside","style":"note"},{"level":2,"anchor":"Making-Your-First-Connection","text":"Making Your First Connection","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Now that your project is configured, you can start connecting to YubiKeys. YubiKit provides different connection types depending on how the YubiKey is connected to the device."}]},{"level":3,"anchor":"Understanding-Connection-Types","text":"Understanding Connection Types","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"YubiKit handles three different connection methods:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"NFC","type":"text"}]},{"text":": Short-range wireless communication (iOS only)","type":"text"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"USB-C","type":"text"}],"type":"strong"},{"text":": Direct USB connection via SmartCard interface","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Lightning"}],"type":"strong"},{"text":": YubiKey 5Ci connected to Lightning port (iOS only)","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each connection type works differently, so let’s explore how to use them."}]},{"level":3,"anchor":"NFC-Connections","text":"NFC Connections","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"NFC connections are user-initiated and short-lived. The user must bring their YubiKey close to their device:"}]},{"syntax":"swift","type":"codeListing","code":["import YubiKit","","\/\/ Start an NFC scan","do {","    let connection = try await NFCSmartCardConnection.connection()","","    \/\/ Use the connection quickly - NFC sessions have a timeout","    let session = try await OATHSession.session(withConnection: connection)","    let codes = try await session.calculateCodes()","","    \/\/ Always close NFC connections with a user message","    await connection.close(message: \"OATH codes retrieved\")","","} catch {","    \/\/ Handle connection errors (user cancelled, no YubiKey found, etc.)","    print(\"NFC connection failed: \\(error)\")","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"NFC connections automatically show the iOS NFC interface and require user interaction to complete."}]},{"level":3,"anchor":"USB-and-Lightning-Connections","text":"USB and Lightning Connections","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Wired connections are persistent - they stay connected until the YubiKey is unplugged:"}]},{"syntax":"swift","type":"codeListing","code":["import YubiKit","","\/\/ Connect to any wired YubiKey (USB-C or Lightning)","do {","    let connection = try await WiredSmartCardConnection.connection()","","    \/\/ Perform operations - connection stays active","    let session = try await OATHSession.session(withConnection: connection)","    let codes = try await session.calculateCodes()","","    \/\/ Monitor for disconnection or close when done","    let error = await connection.connectionDidClose()","    if let error = error {","        print(\"Connection closed with error: \\(error)\")","    }","","} catch {","    print(\"Wired connection failed: \\(error)\")","}"]},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"WiredSmartCardConnection.connection()"},{"text":" method automatically detects whether you’re using USB-C or Lightning.","type":"text"}]},{"level":3,"anchor":"Specific-Connection-Types","text":"Specific Connection Types","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For more control, you can connect to specific interfaces:"}]},{"syntax":"swift","type":"codeListing","code":["\/\/ USB-C only","let usbConnection = try await USBSmartCardConnection.connection()","","\/\/ Lightning only (iOS)","let lightningConnection = try await LightningSmartCardConnection.connection()","","\/\/ NFC with custom message (iOS)","let nfcConnection = try await NFCSmartCardConnection.connection(","    alertMessage: \"Hold your YubiKey near the phone\"",")"]},{"level":2,"anchor":"Understanding-Connection-Lifecycle","text":"Understanding Connection Lifecycle","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Critical:"}]},{"type":"text","text":" Connections must be explicitly closed. You can only have one active connection to a YubiKey at any time."}]},{"level":3,"anchor":"Connection-Behavior","text":"Connection Behavior","type":"heading"},{"items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Exclusive access","type":"text"}]},{"type":"text","text":": Only one connection can exist per YubiKey at any time"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Manual closure required"}],"type":"strong"},{"text":": Dropping a connection reference does NOT automatically close it - you must call ","type":"text"},{"type":"codeVoice","code":"close()"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Resource blocking","type":"text"}]},{"type":"text","text":": An unclosed connection prevents new connections (throws "},{"type":"codeVoice","code":"ConnectionError.busy"},{"type":"text","text":")"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Connections are value types that act as exclusive access tokens to the underlying hardware resource."}]},{"level":2,"anchor":"Working-with-Sessions","text":"Working with Sessions","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Once you have a connection, create sessions to access different YubiKey applications:","type":"text"}]},{"level":3,"anchor":"OATH-Session-TOTPHOTP-codes","text":"OATH Session (TOTP\/HOTP codes)","type":"heading"},{"syntax":"swift","type":"codeListing","code":["let session = try await OATHSession.session(withConnection: connection)","let codes = try await session.calculateCodes()","","for (credential, code) in codes {","    print(\"\\(credential.label): \\(code?.code ?? \"Touch required\")\")","}"]},{"level":3,"anchor":"PIV-Session-Certificates-and-keys","text":"PIV Session (Certificates and keys)","type":"heading"},{"syntax":"swift","type":"codeListing","code":["let session = try await PIVSession.session(withConnection: connection)","let certificate = try await session.getCertificateInSlot(.authentication)","print(\"Found certificate: \\(certificate.subject)\")"]},{"level":3,"anchor":"Management-Session-Device-information","text":"Management Session (Device information)","type":"heading"},{"syntax":"swift","type":"codeListing","code":["let session = try await ManagementSession.session(withConnection: connection)","print(\"YubiKey version: \\(session.version)\")","","let deviceInfo = try await session.getDeviceInfo()","print(\"Device info: \\(deviceInfo)\")"]},{"level":2,"anchor":"Connection-Management-Patterns","text":"Connection Management Patterns","type":"heading"},{"level":3,"anchor":"For-UI-Applications","text":"For UI Applications","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In SwiftUI or UIKit apps, you typically want to maintain persistent connections and react to connection changes. The "},{"type":"strong","inlineContent":[{"text":"OATHSample","type":"text"}]},{"type":"text","text":" app demonstrates this pattern:"}]},{"syntax":"swift","type":"codeListing","code":["@MainActor","class ConnectionManager: ObservableObject {","    @Published var connection: SmartCardConnection?","","    func startListening() {","        Task {","            \/\/ Continuously wait for YubiKey connections","            while true {","                do {","                    let newConnection = try await WiredSmartCardConnection.connection()","                    self.connection = newConnection","","                    \/\/ Wait for disconnection","                    await newConnection.connectionDidClose()","                    self.connection = nil","                } catch {","                    \/\/ Handle connection errors","                }","            }","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"text":"This approach lets your UI automatically update when YubiKeys are plugged in or removed, creating a smooth user experience.","type":"text"}]},{"level":3,"anchor":"For-Command-Line-Tools","text":"For Command-Line Tools","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"CLI applications often use a simpler approach with a single connection per operation. The ","type":"text"},{"inlineContent":[{"text":"PIVTool","type":"text"}],"type":"strong"},{"text":" sample demonstrates this pattern:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["\/\/ Connect once, perform operations, exit","let connection = try await WiredSmartCardConnection.connection()","let session = try await PIVSession.session(withConnection: connection)","\/\/ ... perform operations"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Command-line tools don’t need to handle connection changes reactively since they typically run one command and exit."}]},{"level":2,"anchor":"Next-Steps","text":"Next Steps","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Now you’re ready to build YubiKey applications! Check out the sample projects to see complete implementations:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"OATHSample"}],"type":"strong"},{"type":"text","text":": Shows how to build a TOTP authenticator app with SwiftUI"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"PIVTool","type":"text"}]},{"text":": Demonstrates PIV operations for certificates and digital signatures","type":"text"}]}]}],"type":"unorderedList"},{"level":3,"anchor":"Build-SDK-documentation","text":"Build SDK documentation","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"You can also build the complete SDK documentation by selecting “Product” -> “Build Documentation” in Xcode. This gives you access to the full YubiKit API reference.","type":"text"}]},{"name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Select an iOS target when building documentation to include all connection types."}]}],"type":"aside","style":"note"}]}],"hierarchy":{"paths":[["doc:\/\/YubiKit\/documentation\/YubiKit"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/yubikit\/gettingstarted"]}],"abstract":[{"text":"Prepare your project to connect to the YubiKey via NFC, SmartCard and Lightning.","type":"text"}],"metadata":{"roleHeading":"Article","modules":[{"name":"YubiKit"}],"role":"article","title":"Getting Started"},"identifier":{"url":"doc:\/\/YubiKit\/documentation\/YubiKit\/GettingStarted","interfaceLanguage":"swift"},"kind":"article","sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"add-framework-1.png":{"identifier":"add-framework-1.png","type":"image","variants":[{"url":"\/images\/YubiKit\/add-framework-1@2x.png","traits":["2x","light"]},{"url":"\/images\/YubiKit\/add-framework-1~dark@2x.png","traits":["2x","dark"]}],"alt":"An image showing how to add the YubiKit SDK to your Xcode project."},"documentation-header.png":{"type":"image","variants":[{"url":"\/images\/YubiKit\/documentation-header@2x.png","traits":["2x","light"]},{"url":"\/images\/YubiKit\/documentation-header~dark@2x.png","traits":["2x","dark"]}],"alt":"YubiKeys in a row","identifier":"documentation-header.png"},"external-accessory.png":{"identifier":"external-accessory.png","type":"image","variants":[{"url":"\/images\/YubiKit\/external-accessory@2x.png","traits":["2x","light"]},{"url":"\/images\/YubiKit\/external-accessory~dark@2x.png","traits":["2x","dark"]}],"alt":"An image showing how to support for lightning Yubikeys."},"nfc-privacy.png":{"type":"image","variants":[{"url":"\/images\/YubiKit\/nfc-privacy@2x.png","traits":["2x","light"]},{"url":"\/images\/YubiKit\/nfc-privacy~dark@2x.png","traits":["2x","dark"]}],"alt":"An image showing how to add NFC privacy string tro project.","identifier":"nfc-privacy.png"},"nfc-identifiers-list.png":{"identifier":"nfc-identifiers-list.png","type":"image","variants":[{"url":"\/images\/YubiKit\/nfc-identifiers-list@2x.png","traits":["2x","light"]},{"url":"\/images\/YubiKit\/nfc-identifiers-list~dark@2x.png","traits":["2x","dark"]}],"alt":"An image showing the list of nfc identifiers added."},"nfc-identifiers.png":{"type":"image","variants":[{"url":"\/images\/YubiKit\/nfc-identifiers@2x.png","traits":["2x","light"]},{"url":"\/images\/YubiKit\/nfc-identifiers~dark@2x.png","traits":["2x","dark"]}],"alt":"An image showing how to add the nfc application identifiers.","identifier":"nfc-identifiers.png"},"doc://YubiKit/documentation/YubiKit":{"type":"topic","url":"\/documentation\/yubikit","images":[{"identifier":"documentation-header.png","type":"icon"}],"title":"YubiKit","identifier":"doc:\/\/YubiKit\/documentation\/YubiKit","abstract":[{"text":"Connect and run commands on the different applications on a YubiKey. The framework support connecting using NFC, Lightning and USB-C.","type":"text"}],"kind":"symbol","role":"collection"},"nfc-entitlement.png":{"identifier":"nfc-entitlement.png","type":"image","variants":[{"url":"\/images\/YubiKit\/nfc-entitlement@2x.png","traits":["2x","light"]},{"url":"\/images\/YubiKit\/nfc-entitlement~dark@2x.png","traits":["2x","dark"]}],"alt":"An image showing how to add wireless entitlements to project."},"smart-card.png":{"type":"image","variants":[{"url":"\/images\/YubiKit\/smart-card@2x.png","traits":["2x","light"]},{"url":"\/images\/YubiKit\/smart-card~dark@2x.png","traits":["2x","dark"]}],"alt":"An image showing how to add NFC privacy string to project.","identifier":"smart-card.png"},"add-framework-2.png":{"identifier":"add-framework-2.png","type":"image","variants":[{"url":"\/images\/YubiKit\/add-framework-2@2x.png","traits":["2x","light"]},{"url":"\/images\/YubiKit\/add-framework-2~dark@2x.png","traits":["2x","dark"]}],"alt":"An image showing how to add the YubiKit SDK to your Xcode project."}}}