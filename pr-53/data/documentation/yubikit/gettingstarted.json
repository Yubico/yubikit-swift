{"metadata":{"role":"article","modules":[{"name":"YubiKit"}],"title":"Getting Started","roleHeading":"Article"},"abstract":[{"text":"Prepare your project to connect to the YubiKey via NFC, SmartCard and Lightning.","type":"text"}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"The YubiKit framework is distributed using the Swift Package Manager. To add the framework to your project follow these steps:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Select your project."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Choose the “Package Dependencies” tab."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Press the plus-button to bring up the add package dialog.","type":"text"}]}]}],"type":"orderedList"},{"inlineContent":[{"type":"image","identifier":"add-framework-1.png"}],"type":"paragraph"},{"start":4,"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Enter ","type":"text"},{"code":"https:\/\/github.com\/Yubico\/yubikit-swift\/","type":"codeVoice"},{"text":" in the search field and select the Yubico Swift Package.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Press the “Add Package” button to add the SDK to your project.","type":"text"}]}]}],"type":"orderedList"},{"inlineContent":[{"type":"image","identifier":"add-framework-2.png"}],"type":"paragraph"},{"text":"NFC","level":3,"anchor":"NFC","type":"heading"},{"inlineContent":[{"type":"text","text":"If you want your app to communicate with YubiKeys via NFC you need to add the wireless entitlement, list of NFC"},{"type":"text","text":" "},{"type":"text","text":"application identifiers and a NFC Privacy statement to the application."}],"type":"paragraph"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Add Wireless entitlement"}]}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Select your project.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Select your application target."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Choose the “Signing & Capabilities” tab.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Click the “+”-button to add a new capability.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Select the “Near Field Communication Tag” capability.","type":"text"}]}]}],"type":"orderedList"},{"inlineContent":[{"identifier":"nfc-entitlement.png","type":"image"}],"type":"paragraph"},{"inlineContent":[{"inlineContent":[{"text":"Add list of NFC application identifiers","type":"text"}],"type":"strong"}],"type":"paragraph"},{"start":6,"items":[{"content":[{"inlineContent":[{"text":"Choose the “Info” tab.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add the “ISO7816 application identifiers for NFC” key to the “Custom iOS Target Properties”."}]}]}],"type":"orderedList"},{"inlineContent":[{"identifier":"nfc-identifiers.png","type":"image"}],"type":"paragraph"},{"start":8,"items":[{"content":[{"inlineContent":[{"type":"text","text":"Add the Yubico NFC application identifiers to enable communication with the different"},{"type":"text","text":" "},{"type":"text","text":"applications on the YubiKey."}],"type":"paragraph"}]}],"type":"orderedList"},{"code":["A000000527471117  \/\/ YubiKey Management Application","A0000006472F0001  \/\/ FIDO\/U2F","A0000005272101    \/\/ OATH","A000000308        \/\/ PIV","A000000527200101  \/\/ YubiKey application\/OTP (for HMAC SHA1 challenge-response)","A000000151000000  \/\/ Security Domain"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"image","identifier":"nfc-identifiers-list.png"}],"type":"paragraph"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Add a NFC Privacy description","type":"text"}]}],"type":"paragraph"},{"start":9,"items":[{"content":[{"inlineContent":[{"type":"text","text":"Add the “Privacy - NFC Usage Scan Description” key and a string that describes what you will use NFC for in"},{"type":"text","text":" "},{"type":"text","text":"the application e.g “The application needs access to NFC reading to communicate with your YubiKey.”"}],"type":"paragraph"}]}],"type":"orderedList"},{"inlineContent":[{"type":"image","identifier":"nfc-privacy.png"}],"type":"paragraph"},{"text":"SmartCard\/USB-C","level":3,"anchor":"SmartCardUSB-C","type":"heading"},{"inlineContent":[{"type":"text","text":"To support YubiKeys connected via the USB-C port on a device running iOS 16 or higher, you need to add the"},{"type":"text","text":" "},{"type":"codeVoice","code":"com.apple.security.smartcard"},{"type":"text","text":" entitlement to your application."}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"Select the application entitlements file.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Add the ","type":"text"},{"code":"com.apple.security.smartcard","type":"codeVoice"},{"text":" entitlement to the entitlement list.","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"},{"inlineContent":[{"identifier":"smart-card.png","type":"image"}],"type":"paragraph"},{"name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The SmartCard\/USB-C connection only support the CCID based applications on the YubiKey and does not support U2F, FIDO2 or OTP."}]}],"type":"aside"},{"text":"Lightning\/AccessoryConnection i.e 5Ci YubiKey","level":3,"anchor":"LightningAccessoryConnection-ie-5Ci-YubiKey","type":"heading"},{"inlineContent":[{"type":"text","text":"To add support for the 5Ci YubiKey that connect to the iPhone via the Lightning port you need to add the "},{"type":"codeVoice","code":"com.yubico.ylp"},{"type":"text","text":" string to the list of External Accessories."}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Select your project."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Select your application target."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Choose the “Info” tab.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"If not present add the ","type":"text"},{"code":"Supported external accessory protocols","type":"codeVoice"},{"text":" key and insert the string ","type":"text"},{"code":"com.yubico.ylp","type":"codeVoice"},{"text":" in its list.","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"},{"inlineContent":[{"type":"image","identifier":"external-accessory.png"}],"type":"paragraph"},{"name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The YubiKey 5Ci is an Apple MFi certified external accessory and communicates over iAP2. Setting the value for "},{"type":"codeVoice","code":"Supported external accessory protocols"},{"type":"text","text":" to "},{"type":"codeVoice","code":"com.yubico.ylp"},{"type":"text","text":" will tell the app that all communication with the 5Ci YubiKey via the Lightning port is done using the External Accessory framework."}]}],"type":"aside"},{"text":"Making Your First Connection","level":2,"anchor":"Making-Your-First-Connection","type":"heading"},{"inlineContent":[{"type":"text","text":"Now that your project is configured, you can start connecting to YubiKeys. YubiKit provides different connection types depending on how the YubiKey is connected to the device."}],"type":"paragraph"},{"text":"Understanding Connection Types","level":3,"anchor":"Understanding-Connection-Types","type":"heading"},{"inlineContent":[{"type":"text","text":"YubiKit handles three different connection methods:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"NFC"}],"type":"strong"},{"text":": Short-range wireless communication (iOS only)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"USB-C","type":"text"}],"type":"strong"},{"text":": Direct USB connection via SmartCard interface","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Lightning"}]},{"type":"text","text":": YubiKey 5Ci connected to Lightning port (iOS only)"}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"Each connection type works differently, so let’s explore how to use them."}],"type":"paragraph"},{"text":"NFC Connections","level":3,"anchor":"NFC-Connections","type":"heading"},{"inlineContent":[{"type":"text","text":"NFC connections are user-initiated and short-lived. The user must bring their YubiKey close to their device:"}],"type":"paragraph"},{"code":["import YubiKit","","\/\/ Start an NFC scan","do {","    let connection = try await NFCSmartCardConnection.connection()","","    \/\/ Use the connection quickly - NFC sessions have a timeout","    let session = try await OATHSession.session(withConnection: connection)","    let codes = try await session.calculateCodes()","","    \/\/ Always close NFC connections with a user message","    await connection.close(message: \"OATH codes retrieved\")","","} catch {","    \/\/ Handle connection errors (user cancelled, no YubiKey found, etc.)","    print(\"NFC connection failed: \\(error)\")","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"NFC connections automatically show the iOS NFC interface and require user interaction to complete.","type":"text"}],"type":"paragraph"},{"text":"USB and Lightning Connections","level":3,"anchor":"USB-and-Lightning-Connections","type":"heading"},{"inlineContent":[{"text":"Wired connections are persistent - they stay connected until the YubiKey is unplugged:","type":"text"}],"type":"paragraph"},{"code":["import YubiKit","","\/\/ Connect to any wired YubiKey (USB-C or Lightning)","do {","    let connection = try await WiredSmartCardConnection.connection()","","    \/\/ Connection stays active until YubiKey is unplugged","    let session = try await OATHSession.session(withConnection: connection)","    let codes = try await session.calculateCodes()","","    \/\/ Monitor for disconnection","    let error = await connection.connectionDidClose()","    if let error = error {","        print(\"Connection closed with error: \\(error)\")","    }","","} catch {","    print(\"Wired connection failed: \\(error)\")","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"WiredSmartCardConnection.connection()"},{"type":"text","text":" method automatically detects whether you’re using USB-C or Lightning."}],"type":"paragraph"},{"text":"Specific Connection Types","level":3,"anchor":"Specific-Connection-Types","type":"heading"},{"inlineContent":[{"text":"For more control, you can connect to specific interfaces:","type":"text"}],"type":"paragraph"},{"code":["\/\/ USB-C only","let usbConnection = try await USBSmartCardConnection.connection()","","\/\/ Lightning only (iOS)","let lightningConnection = try await LightningSmartCardConnection.connection()","","\/\/ NFC with custom message (iOS)","let nfcConnection = try await NFCSmartCardConnection.connection(","    alertMessage: \"Hold your YubiKey near the phone\"",")"],"syntax":"swift","type":"codeListing"},{"text":"Working with Sessions","level":2,"anchor":"Working-with-Sessions","type":"heading"},{"inlineContent":[{"type":"text","text":"Once you have a connection, create sessions to access different YubiKey applications:"}],"type":"paragraph"},{"text":"OATH Session (TOTP\/HOTP codes)","level":3,"anchor":"OATH-Session-TOTPHOTP-codes","type":"heading"},{"code":["let session = try await OATHSession.session(withConnection: connection)","let codes = try await session.calculateCodes()","","for (credential, code) in codes {","    print(\"\\(credential.label): \\(code?.code ?? \"Touch required\")\")","}"],"syntax":"swift","type":"codeListing"},{"text":"PIV Session (Certificates and keys)","level":3,"anchor":"PIV-Session-Certificates-and-keys","type":"heading"},{"code":["let session = try await PIVSession.session(withConnection: connection)","let certificate = try await session.getCertificateInSlot(.authentication)","print(\"Found certificate: \\(certificate.subject)\")"],"syntax":"swift","type":"codeListing"},{"text":"Management Session (Device information)","level":3,"anchor":"Management-Session-Device-information","type":"heading"},{"code":["let session = try await ManagementSession.session(withConnection: connection)","print(\"YubiKey version: \\(session.version)\")","","let deviceInfo = try await session.getDeviceInfo()","print(\"Device info: \\(deviceInfo)\")"],"syntax":"swift","type":"codeListing"},{"text":"Connection Management Patterns","level":2,"anchor":"Connection-Management-Patterns","type":"heading"},{"text":"For UI Applications","level":3,"anchor":"For-UI-Applications","type":"heading"},{"inlineContent":[{"type":"text","text":"In SwiftUI or UIKit apps, you typically want to maintain persistent connections and react to connection changes. The "},{"type":"strong","inlineContent":[{"type":"text","text":"OATHSample"}]},{"type":"text","text":" app demonstrates this pattern:"}],"type":"paragraph"},{"code":["@MainActor","class ConnectionManager: ObservableObject {","    @Published var connection: SmartCardConnection?","","    func startListening() {","        Task {","            \/\/ Continuously wait for YubiKey connections","            while true {","                do {","                    let newConnection = try await WiredSmartCardConnection.connection()","                    self.connection = newConnection","","                    \/\/ Wait for disconnection","                    await newConnection.connectionDidClose()","                    self.connection = nil","                } catch {","                    \/\/ Handle connection errors","                }","            }","        }","    }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"This approach lets your UI automatically update when YubiKeys are plugged in or removed, creating a smooth user experience.","type":"text"}],"type":"paragraph"},{"text":"For Command-Line Tools","level":3,"anchor":"For-Command-Line-Tools","type":"heading"},{"inlineContent":[{"text":"CLI applications often use a simpler approach with a single connection per operation. The ","type":"text"},{"inlineContent":[{"text":"PIVTool","type":"text"}],"type":"strong"},{"text":" sample demonstrates this pattern:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["\/\/ Connect once, perform operations, exit","let connection = try await WiredSmartCardConnection.connection()","let session = try await PIVSession.session(withConnection: connection)","\/\/ ... perform operations"]},{"type":"paragraph","inlineContent":[{"text":"Command-line tools don’t need to handle connection changes reactively since they typically run one command and exit.","type":"text"}]},{"level":2,"text":"Next Steps","anchor":"Next-Steps","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Now you’re ready to build YubiKey applications! Check out the sample projects to see complete implementations:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"OATHSample","type":"text"}]},{"type":"text","text":": Shows how to build a TOTP authenticator app with SwiftUI"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"PIVTool"}],"type":"strong"},{"text":": Demonstrates PIV operations for certificates and digital signatures","type":"text"}]}]}]},{"level":3,"text":"Build SDK documentation","anchor":"Build-SDK-documentation","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"You can also build the complete SDK documentation by selecting “Product” -> “Build Documentation” in Xcode. This gives you access to the full YubiKit API reference.","type":"text"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Select an iOS target when building documentation to include all connection types.","type":"text"}]}],"name":"Note","type":"aside","style":"note"}]}],"kind":"article","schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/YubiKit\/documentation\/YubiKit"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/YubiKit\/documentation\/YubiKit\/GettingStarted"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/yubikit\/gettingstarted"]}],"references":{"documentation-header.png":{"identifier":"documentation-header.png","alt":"YubiKeys in a row","type":"image","variants":[{"url":"\/images\/YubiKit\/documentation-header@2x.png","traits":["2x","light"]},{"url":"\/images\/YubiKit\/documentation-header~dark@2x.png","traits":["2x","dark"]}]},"nfc-entitlement.png":{"identifier":"nfc-entitlement.png","alt":"An image showing how to add wireless entitlements to project.","type":"image","variants":[{"url":"\/images\/YubiKit\/nfc-entitlement@2x.png","traits":["2x","light"]},{"url":"\/images\/YubiKit\/nfc-entitlement~dark@2x.png","traits":["2x","dark"]}]},"nfc-identifiers.png":{"identifier":"nfc-identifiers.png","alt":"An image showing how to add the nfc application identifiers.","type":"image","variants":[{"url":"\/images\/YubiKit\/nfc-identifiers@2x.png","traits":["2x","light"]},{"url":"\/images\/YubiKit\/nfc-identifiers~dark@2x.png","traits":["2x","dark"]}]},"smart-card.png":{"identifier":"smart-card.png","alt":"An image showing how to add NFC privacy string to project.","type":"image","variants":[{"url":"\/images\/YubiKit\/smart-card@2x.png","traits":["2x","light"]},{"url":"\/images\/YubiKit\/smart-card~dark@2x.png","traits":["2x","dark"]}]},"nfc-identifiers-list.png":{"identifier":"nfc-identifiers-list.png","alt":"An image showing the list of nfc identifiers added.","type":"image","variants":[{"traits":["2x","light"],"url":"\/images\/YubiKit\/nfc-identifiers-list@2x.png"},{"traits":["2x","dark"],"url":"\/images\/YubiKit\/nfc-identifiers-list~dark@2x.png"}]},"doc://YubiKit/documentation/YubiKit":{"role":"collection","type":"topic","title":"YubiKit","kind":"symbol","identifier":"doc:\/\/YubiKit\/documentation\/YubiKit","images":[{"type":"icon","identifier":"documentation-header.png"}],"abstract":[{"text":"Connect and run commands on the different applications on a YubiKey. The framework support connecting using NFC, Lightning and USB-C.","type":"text"}],"url":"\/documentation\/yubikit"},"add-framework-2.png":{"identifier":"add-framework-2.png","alt":"An image showing how to add the YubiKit SDK to your Xcode project.","type":"image","variants":[{"traits":["2x","light"],"url":"\/images\/YubiKit\/add-framework-2@2x.png"},{"traits":["2x","dark"],"url":"\/images\/YubiKit\/add-framework-2~dark@2x.png"}]},"nfc-privacy.png":{"identifier":"nfc-privacy.png","alt":"An image showing how to add NFC privacy string tro project.","type":"image","variants":[{"url":"\/images\/YubiKit\/nfc-privacy@2x.png","traits":["2x","light"]},{"url":"\/images\/YubiKit\/nfc-privacy~dark@2x.png","traits":["2x","dark"]}]},"external-accessory.png":{"identifier":"external-accessory.png","alt":"An image showing how to support for lightning Yubikeys.","type":"image","variants":[{"traits":["2x","light"],"url":"\/images\/YubiKit\/external-accessory@2x.png"},{"traits":["2x","dark"],"url":"\/images\/YubiKit\/external-accessory~dark@2x.png"}]},"add-framework-1.png":{"identifier":"add-framework-1.png","alt":"An image showing how to add the YubiKit SDK to your Xcode project.","type":"image","variants":[{"url":"\/images\/YubiKit\/add-framework-1@2x.png","traits":["2x","light"]},{"url":"\/images\/YubiKit\/add-framework-1~dark@2x.png","traits":["2x","dark"]}]}}}