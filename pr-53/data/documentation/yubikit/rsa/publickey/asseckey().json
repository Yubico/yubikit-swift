{"abstract":[{"text":"Convert this RSA public key to a native SecKey.","type":"text"}],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asSecKey","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"SecKey","kind":"typeIdentifier","preciseIdentifier":"c:@T@SecKeyRef"},{"text":"?","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"A SecKey suitable for cryptographic operations, or nil if conversion fails."}],"type":"paragraph"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/YubiKit\/documentation\/YubiKit\/RSA\/PublicKey\/asSecKey()"},"hierarchy":{"paths":[["doc:\/\/YubiKit\/documentation\/YubiKit","doc:\/\/YubiKit\/documentation\/YubiKit\/RSA","doc:\/\/YubiKit\/documentation\/YubiKit\/RSA\/PublicKey"]]},"variants":[{"paths":["\/documentation\/yubikit\/rsa\/publickey\/asseckey()"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"modules":[{"name":"YubiKit"}],"role":"symbol","externalID":"s:7YubiKit3RSAO9PublicKeyV05asSecE0So0gE3RefaSgyF","extendedModule":"YubiKit","symbolKind":"method","title":"asSecKey()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asSecKey"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"c:@T@SecKeyRef","kind":"typeIdentifier","text":"SecKey"},{"kind":"text","text":"?"}],"roleHeading":"Instance Method"},"sections":[],"references":{"doc://YubiKit/documentation/YubiKit/RSA/PublicKey":{"url":"\/documentation\/yubikit\/rsa\/publickey","abstract":[{"type":"text","text":"RSA public key with modulus and exponent."},{"type":"text","text":" "},{"type":"text","text":"Uses PKCS #1 DER encoding."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PublicKey"}],"title":"RSA.PublicKey","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PublicKey"}],"identifier":"doc:\/\/YubiKit\/documentation\/YubiKit\/RSA\/PublicKey"},"documentation-header.png":{"identifier":"documentation-header.png","variants":[{"traits":["2x","light"],"url":"\/images\/YubiKit\/documentation-header@2x.png"},{"traits":["2x","dark"],"url":"\/images\/YubiKit\/documentation-header~dark@2x.png"}],"alt":"YubiKeys in a row","type":"image"},"doc://YubiKit/documentation/YubiKit/RSA":{"identifier":"doc:\/\/YubiKit\/documentation\/YubiKit\/RSA","kind":"symbol","title":"RSA","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"RSA"}],"role":"symbol","url":"\/documentation\/yubikit\/rsa","type":"topic","abstract":[{"type":"text","text":"Defines RSA public and private key types and DER encoding\/decoding utilities for PKCS #1."}],"navigatorTitle":[{"kind":"identifier","text":"RSA"}]},"doc://YubiKit/documentation/YubiKit":{"kind":"symbol","type":"topic","title":"YubiKit","url":"\/documentation\/yubikit","role":"collection","identifier":"doc:\/\/YubiKit\/documentation\/YubiKit","abstract":[{"text":"Connect and run commands on the different applications on a YubiKey. The framework support connecting using NFC, Lightning and USB-C.","type":"text"}],"images":[{"type":"icon","identifier":"documentation-header.png"}]},"doc://YubiKit/documentation/YubiKit/RSA/PublicKey/asSecKey()":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asSecKey","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"SecKey","preciseIdentifier":"c:@T@SecKeyRef","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","abstract":[{"text":"Convert this RSA public key to a native SecKey.","type":"text"}],"url":"\/documentation\/yubikit\/rsa\/publickey\/asseckey()","title":"asSecKey()","identifier":"doc:\/\/YubiKit\/documentation\/YubiKit\/RSA\/PublicKey\/asSecKey()","type":"topic"}}}