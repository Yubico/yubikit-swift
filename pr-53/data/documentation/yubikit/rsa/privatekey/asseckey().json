{"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Convert this RSA private key to a native SecKey.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asSecKey"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@SecKeyRef","text":"SecKey"},{"kind":"text","text":"?"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A SecKey suitable for cryptographic operations, or nil if conversion fails."}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/YubiKit\/documentation\/YubiKit\/RSA\/PrivateKey\/asSecKey()"},"hierarchy":{"paths":[["doc:\/\/YubiKit\/documentation\/YubiKit","doc:\/\/YubiKit\/documentation\/YubiKit\/RSA","doc:\/\/YubiKit\/documentation\/YubiKit\/RSA\/PrivateKey"]]},"kind":"symbol","sections":[],"metadata":{"externalID":"s:7YubiKit3RSAO10PrivateKeyV05asSecE0So0gE3RefaSgyF","symbolKind":"method","modules":[{"name":"YubiKit"}],"roleHeading":"Instance Method","role":"symbol","title":"asSecKey()","extendedModule":"YubiKit","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asSecKey"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"SecKey","preciseIdentifier":"c:@T@SecKeyRef"},{"kind":"text","text":"?"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/yubikit\/rsa\/privatekey\/asseckey()"]}],"references":{"doc://YubiKit/documentation/YubiKit/RSA/PrivateKey":{"abstract":[{"text":"RSA private key with associated public key and CRT components.","type":"text"},{"text":" ","type":"text"},{"text":"Uses PKCS #1 DER encoding.","type":"text"}],"identifier":"doc:\/\/YubiKit\/documentation\/YubiKit\/RSA\/PrivateKey","url":"\/documentation\/yubikit\/rsa\/privatekey","title":"RSA.PrivateKey","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrivateKey","kind":"identifier"}],"role":"symbol","kind":"symbol","type":"topic","navigatorTitle":[{"text":"PrivateKey","kind":"identifier"}]},"doc://YubiKit/documentation/YubiKit/RSA":{"role":"symbol","url":"\/documentation\/yubikit\/rsa","title":"RSA","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RSA","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/YubiKit\/documentation\/YubiKit\/RSA","abstract":[{"type":"text","text":"Defines RSA public and private key types and DER encoding\/decoding utilities for PKCS #1."}],"kind":"symbol","navigatorTitle":[{"text":"RSA","kind":"identifier"}]},"doc://YubiKit/documentation/YubiKit/RSA/PrivateKey/asSecKey()":{"identifier":"doc:\/\/YubiKit\/documentation\/YubiKit\/RSA\/PrivateKey\/asSecKey()","role":"symbol","url":"\/documentation\/yubikit\/rsa\/privatekey\/asseckey()","type":"topic","abstract":[{"type":"text","text":"Convert this RSA private key to a native SecKey."}],"kind":"symbol","title":"asSecKey()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asSecKey","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"c:@T@SecKeyRef","text":"SecKey","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"documentation-header.png":{"alt":"YubiKeys in a row","identifier":"documentation-header.png","variants":[{"traits":["2x","light"],"url":"\/images\/YubiKit\/documentation-header@2x.png"},{"traits":["2x","dark"],"url":"\/images\/YubiKit\/documentation-header~dark@2x.png"}],"type":"image"},"doc://YubiKit/documentation/YubiKit":{"type":"topic","identifier":"doc:\/\/YubiKit\/documentation\/YubiKit","title":"YubiKit","url":"\/documentation\/yubikit","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Connect and run commands on the different applications on a YubiKey. The framework support connecting using NFC, Lightning and USB-C."}],"images":[{"type":"icon","identifier":"documentation-header.png"}]}}}