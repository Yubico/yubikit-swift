{"abstract":[{"type":"text","text":"This sample project shows how to integrate the SDK into an iOS and MacOS app. It lists OATH codes"},{"text":" ","type":"text"},{"type":"text","text":"using the "},{"identifier":"doc:\/\/YubiKit\/documentation\/YubiKit\/OATHSession","isActive":true,"type":"reference"},{"text":" and has a separate view that displays the version number of the key. The version","type":"text"},{"type":"text","text":" "},{"type":"text","text":"number is retrieved using the "},{"identifier":"doc:\/\/YubiKit\/documentation\/YubiKit\/ManagementSession","isActive":true,"type":"reference"},{"text":".","type":"text"}],"sampleCodeDownload":{"kind":"sampleDownload","action":{"overridingTitle":"View Source","type":"reference","isActive":true,"identifier":"https:\/\/github.com\/Yubico\/yubikit-swift\/raw\/main\/Samples\/oath-sample.zip"}},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/yubikit\/oathsamplecode"]}],"hierarchy":{"paths":[["doc:\/\/YubiKit\/documentation\/YubiKit"]]},"metadata":{"modules":[{"name":"YubiKit"}],"color":{"standardColorIdentifier":"green"},"roleHeading":"Sample Code","role":"sampleCode","title":"OATHSample: Basic OATH app showcasing how to integrate the SDK"},"kind":"article","primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"inlineContent":[{"type":"text","text":"The sample project consist of two views. One that list the OATH codes calculated, either using USB-C, Lightning or NFC."},{"type":"text","text":" "},{"text":"The other view simply displays the version number of the YubiKey. This view also supports all three connection types.","type":"text"}],"type":"paragraph"},{"type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":"This is only a sample project and there is currently no handling for password protected YubiKeys."}],"type":"paragraph"}],"name":"Note"},{"anchor":"OATH-view","level":2,"text":"OATH view","type":"heading"},{"inlineContent":[{"text":"The main function of the OATH part of the app is the ","type":"text"},{"type":"codeVoice","code":"startWiredConnection()"},{"type":"text","text":" function. This will cancel any previous"},{"type":"text","text":" "},{"code":"wiredConnectionTask","type":"codeVoice"},{"text":" and create a new one. In the Task it will use the ","type":"text"},{"code":"Connections","type":"codeVoice"},{"type":"text","text":" helper to start waiting for"},{"type":"text","text":" "},{"type":"text","text":"a wired connection. Depending on the device this will either be a "},{"type":"codeVoice","code":"LightningConnection"},{"type":"text","text":" or a "},{"isActive":true,"identifier":"doc:\/\/YubiKit\/documentation\/YubiKit\/SmartCardConnection","type":"reference"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Once a connection has been established we check that the task hasn’t been cancelled before proceeding."},{"type":"text","text":" "},{"text":"The ","type":"text"},{"type":"codeVoice","code":"calculateCodes(connection:)"},{"text":" function creates a new ","type":"text"},{"identifier":"doc:\/\/YubiKit\/documentation\/YubiKit\/OATHSession","type":"reference","isActive":true},{"text":" and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"calls "},{"type":"codeVoice","code":".calculateCodes()"},{"text":" on the session. The result is then used to populate the list of codes in the UI.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"At this point the app will wait for the connection to close. This can be caused by the user unplugging the YubiKey or","type":"text"},{"type":"text","text":" "},{"type":"text","text":"a connection error of some sort forcing the connection to close. If the connection is closed the app will clean up"},{"type":"text","text":" "},{"text":"the user interface and loop around ","type":"text"},{"type":"codeVoice","code":"startWiredConnection()"},{"type":"text","text":" again."}]},{"syntax":"swift","code":["func startWiredConnection() {","    wiredConnectionTask?.cancel()","    wiredConnectionTask = Task { @MainActor in","        while true {","            do {","                error = nil","                guard !Task.isCancelled else { return }","                \/\/ Wait for a suitable wired connection for the current device.","                let connection = try await WiredConnection.connection()","                guard !Task.isCancelled else { return }","                try await calculateCodes(connection: connection)","                \/\/ Wait for the connection to close, i.e the YubiKey to be unplugged from the device.","                \/\/ If the YubiKey was simply unplugged it will return nil, otherwise the error","                \/\/ causing the disconnect will be returned.","                guard !Task.isCancelled else { return }","                error = await connection.connectionDidClose()","                accounts.removeAll()","                source = \"no connection\"","                continue","            } catch (let e) {","                error = e","                continue","            }","        }","    }","}","","@MainActor private func calculateCodes(connection: Connection) async throws {","    self.error = nil","    let session = try await OATHSession.session(withConnection: connection)","    let result = try await session.calculateCodes()","    self.accounts = result.map { Account(label: $0.0.label, code: $0.1?.code ?? \"****\") }","    self.source = connection.connectionType","}"],"type":"codeListing"},{"anchor":"Settings-view","text":"Settings view","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"To bring up the settings view we’ve added a "},{"code":"Button","type":"codeVoice"},{"type":"text","text":" to the "},{"type":"codeVoice","code":"OATHListView"},{"text":". The button will stop","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"any wired connections and cancel the wait for new connections. It will then present the "},{"type":"codeVoice","code":"SettingsView"},{"text":" ","type":"text"},{"type":"text","text":"as a SwiftUI sheet."}]},{"inlineContent":[{"text":"The ","type":"text"},{"code":"SettingsModel","type":"codeVoice"},{"text":" is simpler since it will only retrieve the version number once when it appears","type":"text"},{"type":"text","text":" "},{"text":"and it does not handle YubiKeys being unplugged and plugged back again. In this case we can use the","type":"text"},{"type":"text","text":" "},{"code":"Connection.anyConnection()","type":"codeVoice"},{"text":" function that will return any wired YubiKey that might be connected","type":"text"},{"text":" ","type":"text"},{"text":"or, if no wired key is present it will start scanning for a NFC key. Once connected we create","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/YubiKit\/documentation\/YubiKit\/ManagementSession"},{"type":"text","text":" and get the key version."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["func getKeyVersion() {","    Task { @MainActor in","        self.error = nil","        do {","            let connection = try await AnyConnection.connection()","            let session = try await ManagementSession.session(withConnection: connection)","            self.keyVersion = session.version.description","            #if os(iOS)","            if let nfcConnection = connection.nfcConnection {","                self.connection = \"NFC\"","                await nfcConnection.close(message: \"YubiKey version read\")","            } else {","                self.connection = connection as? SmartCardConnection != nil ? \"SmartCard\" : \"Lightning\"","            }","            #else","            self.connection = \"SmartCard\"","            #endif","        } catch {","            self.error = error","        }","    }","}"]}]}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/YubiKit\/documentation\/YubiKit\/OATHSampleCode"},"references":{"doc://YubiKit/documentation/YubiKit/SmartCardConnection":{"title":"SmartCardConnection","type":"topic","abstract":[{"type":"text","text":"A connection to the YubiKey utilizing the USB-C port and the TKSmartCard implementation from"},{"text":" ","type":"text"},{"type":"text","text":"the CryptoTokenKit framework."}],"url":"\/documentation\/yubikit\/smartcardconnection","navigatorTitle":[{"kind":"identifier","text":"SmartCardConnection"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SmartCardConnection","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/YubiKit\/documentation\/YubiKit\/SmartCardConnection"},"https://github.com/Yubico/yubikit-swift/raw/main/Samples/oath-sample.zip":{"identifier":"https:\/\/github.com\/Yubico\/yubikit-swift\/raw\/main\/Samples\/oath-sample.zip","url":"https:\/\/github.com\/Yubico\/yubikit-swift\/raw\/main\/Samples\/oath-sample.zip","type":"download","checksum":null},"doc://YubiKit/documentation/YubiKit/OATHSession":{"title":"OATHSession","kind":"symbol","navigatorTitle":[{"text":"OATHSession","kind":"identifier"}],"identifier":"doc:\/\/YubiKit\/documentation\/YubiKit\/OATHSession","type":"topic","url":"\/documentation\/yubikit\/oathsession","abstract":[{"type":"text","text":"An interface to the OATH application on the YubiKey."}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OATHSession"}]},"doc://YubiKit/documentation/YubiKit":{"type":"topic","title":"YubiKit","identifier":"doc:\/\/YubiKit\/documentation\/YubiKit","images":[{"type":"icon","identifier":"documentation-header.png"}],"role":"collection","url":"\/documentation\/yubikit","abstract":[{"type":"text","text":"Connect and run commands on the different applications on a YubiKey. The framework support connecting using NFC, Lightning and USB-C."}],"kind":"symbol"},"doc://YubiKit/documentation/YubiKit/ManagementSession":{"title":"ManagementSession","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ManagementSession"}],"navigatorTitle":[{"text":"ManagementSession","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/YubiKit\/documentation\/YubiKit\/ManagementSession","url":"\/documentation\/yubikit\/managementsession","kind":"symbol","abstract":[{"type":"text","text":"An interface to the Management application on the YubiKey."}]},"documentation-header.png":{"alt":"YubiKeys in a row","identifier":"documentation-header.png","type":"image","variants":[{"url":"\/images\/YubiKit\/documentation-header@2x.png","traits":["2x","light"]},{"traits":["2x","dark"],"url":"\/images\/YubiKit\/documentation-header~dark@2x.png"}]}}}