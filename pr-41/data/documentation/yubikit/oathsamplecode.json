{"sections":[],"hierarchy":{"paths":[["doc:\/\/YubiKit\/documentation\/YubiKit"]]},"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/YubiKit\/documentation\/YubiKit\/OATHSampleCode"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"This sample project shows how to integrate the SDK into an iOS and MacOS app. It lists OATH codes"},{"type":"text","text":" "},{"type":"text","text":"using the "},{"identifier":"doc:\/\/YubiKit\/documentation\/YubiKit\/OATHSession","type":"reference","isActive":true},{"type":"text","text":" and has a separate view that displays the version number of the key. The version"},{"type":"text","text":" "},{"type":"text","text":"number is retrieved using the "},{"identifier":"doc:\/\/YubiKit\/documentation\/YubiKit\/ManagementSession","type":"reference","isActive":true},{"type":"text","text":"."}],"sampleCodeDownload":{"kind":"sampleDownload","action":{"identifier":"https:\/\/github.com\/Yubico\/yubikit-swift\/tree\/main\/Samples\/OATHSample","isActive":true,"overridingTitle":"View Source","type":"reference"}},"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"inlineContent":[{"type":"text","text":"The sample project consist of two views. One that list the OATH codes calculated, either using USB-C, Lightning or NFC."},{"type":"text","text":" "},{"type":"text","text":"The other view simply displays the version number of the YubiKey. This view also supports all three connection types."}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This is only a sample project and there is currently no handling for password protected YubiKeys."}]}],"style":"note","type":"aside","name":"Note"},{"text":"OATH view","level":2,"type":"heading","anchor":"OATH-view"},{"inlineContent":[{"text":"The main function of the OATH part of the app is the ","type":"text"},{"code":"startWiredConnection()","type":"codeVoice"},{"text":" function. This will cancel any previous","type":"text"},{"text":" ","type":"text"},{"code":"wiredConnectionTask","type":"codeVoice"},{"text":" and create a new one. In the Task it will use the ","type":"text"},{"code":"Connections","type":"codeVoice"},{"text":" helper to start waiting for","type":"text"},{"text":" ","type":"text"},{"text":"a wired connection. Depending on the device this will either be a ","type":"text"},{"code":"LightningSmartCardConnection","type":"codeVoice"},{"text":" or a ","type":"text"},{"identifier":"doc:\/\/YubiKit\/documentation\/YubiKit\/USBSmartCardConnection","isActive":true,"type":"reference"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Once a connection has been established we check that the task hasn’t been cancelled before proceeding.","type":"text"},{"text":" ","type":"text"},{"text":"The ","type":"text"},{"code":"calculateCodes(connection:)","type":"codeVoice"},{"text":" function creates a new ","type":"text"},{"identifier":"doc:\/\/YubiKit\/documentation\/YubiKit\/OATHSession","isActive":true,"type":"reference"},{"text":" and","type":"text"},{"text":" ","type":"text"},{"text":"calls ","type":"text"},{"code":".calculateCodes()","type":"codeVoice"},{"text":" on the session. The result is then used to populate the list of codes in the UI.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"At this point the app will wait for the connection to close. This can be caused by the user unplugging the YubiKey or","type":"text"},{"text":" ","type":"text"},{"text":"a connection error of some sort forcing the connection to close. If the connection is closed the app will clean up","type":"text"},{"text":" ","type":"text"},{"text":"the user interface and loop around ","type":"text"},{"code":"startWiredConnection()","type":"codeVoice"},{"text":" again.","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["func startWiredConnection() {","    wiredConnectionTask?.cancel()","    wiredConnectionTask = Task { @MainActor in","        while true {","            do {","                error = nil","                guard !Task.isCancelled else { return }","                \/\/ Wait for a suitable wired connection for the current device.","                let connection = try await WiredSmartCardConnection.connection()","                guard !Task.isCancelled else { return }","                try await calculateCodes(connection: connection)","                \/\/ Wait for the connection to close, i.e the YubiKey to be unplugged from the device.","                \/\/ If the YubiKey was simply unplugged it will return nil, otherwise the error","                \/\/ causing the disconnect will be returned.","                guard !Task.isCancelled else { return }","                error = await connection.connectionDidClose()","                accounts.removeAll()","                source = \"no connection\"","                continue","            } catch (let e) {","                error = e","                continue","            }","        }","    }","}","","@MainActor private func calculateCodes(connection: SmartCardConnection) async throws {","    self.error = nil","    let session = try await OATHSession.session(withConnection: connection)","    let result = try await session.calculateCodes()","    self.accounts = result.map { Account(label: $0.0.label, code: $0.1?.code ?? \"****\") }","    self.source = connection.connectionType","}"]},{"text":"Settings view","level":2,"type":"heading","anchor":"Settings-view"},{"inlineContent":[{"text":"To bring up the settings view we’ve added a ","type":"text"},{"code":"Button","type":"codeVoice"},{"text":" to the ","type":"text"},{"code":"OATHListView","type":"codeVoice"},{"text":". The button will stop","type":"text"},{"text":" ","type":"text"},{"text":"any wired connections and cancel the wait for new connections. It will then present the ","type":"text"},{"code":"SettingsView","type":"codeVoice"},{"text":" ","type":"text"},{"text":"as a SwiftUI sheet.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The "},{"code":"Model","type":"codeVoice"},{"type":"text","text":" is simpler since it will only retrieve the version number once when it appears"},{"type":"text","text":" "},{"type":"text","text":"and it does not handle YubiKeys being unplugged and plugged back again. In this case we can use the"},{"type":"text","text":" "},{"code":"AnySmartCardConnection.connection()","type":"codeVoice"},{"type":"text","text":" function that will return any wired YubiKey that might be connected"},{"type":"text","text":" "},{"type":"text","text":"or, if no wired key is present it will start scanning for a NFC key. Once connected we create"},{"type":"text","text":" "},{"type":"text","text":"the "},{"identifier":"doc:\/\/YubiKit\/documentation\/YubiKit\/ManagementSession","type":"reference","isActive":true},{"type":"text","text":" and get the key version."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["func getKeyVersion() {","    Task { @MainActor in","        self.error = nil","        do {","            let connection = try await AnySmartCardConnection.connection()","            let session = try await ManagementSession.session(withConnection: connection)","            self.keyVersion = session.version.description","            #if os(iOS)","            if let nfcConnection = connection.nfcConnection {","                self.connection = \"NFC\"","                await nfcConnection.close(message: \"YubiKey version read\")","            } else {","                self.connection = connection as? USBSmartCardConnection != nil ? \"SmartCard\" : \"Lightning\"","            }","            #else","            self.connection = \"SmartCard\"","            #endif","        } catch {","            self.error = error","        }","    }","}"]}]}],"metadata":{"roleHeading":"Sample Code","color":{"standardColorIdentifier":"green"},"modules":[{"name":"YubiKit"}],"role":"sampleCode","title":"OATHSample: Basic OATH app showcasing how to integrate the SDK"},"variants":[{"paths":["\/documentation\/yubikit\/oathsamplecode"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://YubiKit/documentation/YubiKit/OATHSession":{"identifier":"doc:\/\/YubiKit\/documentation\/YubiKit\/OATHSession","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"OATHSession"}],"role":"symbol","abstract":[{"type":"text","text":"An interface to the OATH application on the YubiKey."}],"url":"\/documentation\/yubikit\/oathsession","navigatorTitle":[{"kind":"identifier","text":"OATHSession"}],"kind":"symbol","title":"OATHSession","type":"topic"},"doc://YubiKit/documentation/YubiKit/ManagementSession":{"title":"ManagementSession","abstract":[{"type":"text","text":"An interface to the Management application on the YubiKey."}],"role":"symbol","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ManagementSession","kind":"identifier"}],"navigatorTitle":[{"text":"ManagementSession","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/yubikit\/managementsession","type":"topic","identifier":"doc:\/\/YubiKit\/documentation\/YubiKit\/ManagementSession"},"doc://YubiKit/documentation/YubiKit":{"abstract":[{"text":"Connect and run commands on the different applications on a YubiKey. The framework support connecting using NFC, Lightning and USB-C.","type":"text"}],"title":"YubiKit","type":"topic","identifier":"doc:\/\/YubiKit\/documentation\/YubiKit","images":[{"identifier":"documentation-header.png","type":"icon"}],"role":"collection","kind":"symbol","url":"\/documentation\/yubikit"},"doc://YubiKit/documentation/YubiKit/USBSmartCardConnection":{"identifier":"doc:\/\/YubiKit\/documentation\/YubiKit\/USBSmartCardConnection","title":"USBSmartCardConnection","abstract":[{"text":"A connection to the YubiKey utilizing the USB-C port and the TKSmartCard implementation from","type":"text"},{"text":" ","type":"text"},{"text":"the CryptoTokenKit framework.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"USBSmartCardConnection","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"USBSmartCardConnection","kind":"identifier"}],"url":"\/documentation\/yubikit\/usbsmartcardconnection"},"documentation-header.png":{"variants":[{"url":"\/images\/YubiKit\/documentation-header@2x.png","traits":["2x","light"]},{"url":"\/images\/YubiKit\/documentation-header~dark@2x.png","traits":["2x","dark"]}],"identifier":"documentation-header.png","alt":"YubiKeys in a row","type":"image"},"https://github.com/Yubico/yubikit-swift/tree/main/Samples/OATHSample":{"checksum":null,"url":"https:\/\/github.com\/Yubico\/yubikit-swift\/tree\/main\/Samples\/OATHSample","type":"download","identifier":"https:\/\/github.com\/Yubico\/yubikit-swift\/tree\/main\/Samples\/OATHSample"}}}